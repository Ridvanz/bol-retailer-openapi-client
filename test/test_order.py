# coding: utf-8

"""
    v10 - Retailer API

    The bol.com API for retailers.  # Authentication Our API requires authentication via OAuth2. The detailed steps to authenticate are explained [here](https://api.bol.com/retailer/public/Retailer-API/authentication.html)   # Demo scenarios Our API specification includes examples of the responses you can expect. For more information as well as more examples, we refer you to the following resources:   - [Demo environment](https://api.bol.com/retailer/public/Retailer-API/demo/demo.html) - [Demo scenarios](https://api.bol.com/retailer/public/Retailer-API/demo/v10-index.html) 

    The version of the OpenAPI document: 10.x
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order import Order

class TestOrder(unittest.TestCase):
    """Order unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Order:
        """Test Order
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Order`
        """
        model = Order()
        if include_optional:
            return Order(
                order_id = 'A2K8290LP8',
                pickup_point = True,
                order_placed_date_time = '2017-02-09T12:39:48+01:00',
                shipment_details = openapi_client.models.shipment_details.ShipmentDetails(
                    pickup_point_name = 'Albert Heijn: UTRECHT', 
                    salutation = 'MALE', 
                    first_name = 'Billie', 
                    surname = 'Jansen', 
                    street_name = 'Dorpstraat', 
                    house_number = '1', 
                    house_number_extension = 'B', 
                    extra_address_information = 'Apartment', 
                    zip_code = '1111ZZ', 
                    city = 'Utrecht', 
                    country_code = 'NL', 
                    email = 'billie@verkopen.bol.com', 
                    company = 'bol.com', 
                    delivery_phone_number = '012123456', 
                    language = 'nl', ),
                billing_details = openapi_client.models.billing_details.BillingDetails(
                    salutation = 'MALE', 
                    first_name = 'Billie', 
                    surname = 'Jansen', 
                    street_name = 'Dorpstraat', 
                    house_number = '1', 
                    house_number_extension = 'B', 
                    extra_address_information = 'Apartment', 
                    zip_code = '1111ZZ', 
                    city = 'Utrecht', 
                    country_code = 'NL', 
                    email = 'billie@verkopen.bol.com', 
                    company = 'bol.com', 
                    vat_number = 'NL999999999B99', 
                    kvk_number = '99887766', 
                    order_reference = 'MijnReferentie', ),
                order_items = [
                    openapi_client.models.order_order_item.OrderOrderItem(
                        order_item_id = '2012345678', 
                        cancellation_request = False, 
                        fulfilment = openapi_client.models.order_fulfilment.OrderFulfilment(
                            method = 'FBR', 
                            distribution_party = 'RETAILER', 
                            latest_delivery_date = 'Fri Feb 10 00:00:00 UTC 2017', 
                            exact_delivery_date = 'Mon Feb 13 00:00:00 UTC 2017', 
                            expiry_date = 'Mon Feb 13 00:00:00 UTC 2017', 
                            time_frame_type = 'REGULAR', ), 
                        offer = openapi_client.models.order_offer.OrderOffer(
                            offer_id = '6ff736b5-cdd0-4150-8c67-78269ee986f5', 
                            reference = 'BOLCOM00123', ), 
                        product = openapi_client.models.order_product.OrderProduct(
                            ean = '0000007740404', 
                            title = 'Product Title', ), 
                        quantity = 10, 
                        quantity_shipped = 10, 
                        quantity_cancelled = 0, 
                        unit_price = 12.99, 
                        commission = 5.18, 
                        additional_services = [
                            openapi_client.models.additional_service.AdditionalService(
                                service_type = 'PLACEMENT_AND_INSTALLATION', )
                            ], 
                        latest_changed_date_time = '2017-02-09T13:39:48+01:00', )
                    ]
            )
        else:
            return Order(
                order_id = 'A2K8290LP8',
                pickup_point = True,
                shipment_details = openapi_client.models.shipment_details.ShipmentDetails(
                    pickup_point_name = 'Albert Heijn: UTRECHT', 
                    salutation = 'MALE', 
                    first_name = 'Billie', 
                    surname = 'Jansen', 
                    street_name = 'Dorpstraat', 
                    house_number = '1', 
                    house_number_extension = 'B', 
                    extra_address_information = 'Apartment', 
                    zip_code = '1111ZZ', 
                    city = 'Utrecht', 
                    country_code = 'NL', 
                    email = 'billie@verkopen.bol.com', 
                    company = 'bol.com', 
                    delivery_phone_number = '012123456', 
                    language = 'nl', ),
                order_items = [
                    openapi_client.models.order_order_item.OrderOrderItem(
                        order_item_id = '2012345678', 
                        cancellation_request = False, 
                        fulfilment = openapi_client.models.order_fulfilment.OrderFulfilment(
                            method = 'FBR', 
                            distribution_party = 'RETAILER', 
                            latest_delivery_date = 'Fri Feb 10 00:00:00 UTC 2017', 
                            exact_delivery_date = 'Mon Feb 13 00:00:00 UTC 2017', 
                            expiry_date = 'Mon Feb 13 00:00:00 UTC 2017', 
                            time_frame_type = 'REGULAR', ), 
                        offer = openapi_client.models.order_offer.OrderOffer(
                            offer_id = '6ff736b5-cdd0-4150-8c67-78269ee986f5', 
                            reference = 'BOLCOM00123', ), 
                        product = openapi_client.models.order_product.OrderProduct(
                            ean = '0000007740404', 
                            title = 'Product Title', ), 
                        quantity = 10, 
                        quantity_shipped = 10, 
                        quantity_cancelled = 0, 
                        unit_price = 12.99, 
                        commission = 5.18, 
                        additional_services = [
                            openapi_client.models.additional_service.AdditionalService(
                                service_type = 'PLACEMENT_AND_INSTALLATION', )
                            ], 
                        latest_changed_date_time = '2017-02-09T13:39:48+01:00', )
                    ],
        )
        """

    def testOrder(self):
        """Test Order"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
