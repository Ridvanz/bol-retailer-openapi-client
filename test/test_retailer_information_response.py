# coding: utf-8

"""
    v10 - Retailer API

    The bol.com API for retailers.  # Authentication Our API requires authentication via OAuth2. The detailed steps to authenticate are explained [here](https://api.bol.com/retailer/public/Retailer-API/authentication.html)   # Demo scenarios Our API specification includes examples of the responses you can expect. For more information as well as more examples, we refer you to the following resources:   - [Demo environment](https://api.bol.com/retailer/public/Retailer-API/demo/demo.html) - [Demo scenarios](https://api.bol.com/retailer/public/Retailer-API/demo/v10-index.html) 

    The version of the OpenAPI document: 10.x
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.retailer_information_response import RetailerInformationResponse

class TestRetailerInformationResponse(unittest.TestCase):
    """RetailerInformationResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RetailerInformationResponse:
        """Test RetailerInformationResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RetailerInformationResponse`
        """
        model = RetailerInformationResponse()
        if include_optional:
            return RetailerInformationResponse(
                retailer_id = '1055479',
                display_name = 'RETAILER123',
                company_name = 'Fietsentuin',
                vat_number = 'NL123456789B01',
                kvk_number = '90005414',
                registration_date = '2015-06-17',
                top_retailer = False,
                rating_method = 'THREE_MONTHS',
                retailer_rating = openapi_client.models.retailer_rating.RetailerRating(
                    retailer_rating = 9.1, 
                    product_information_rating = 9.6, 
                    delivery_time_rating = 9.4, 
                    shipping_rating = 9.4, 
                    service_rating = 9.4, ),
                retailer_review = openapi_client.models.retailer_review.RetailerReview(
                    total_review_count = 14, 
                    approval_percentage = 100, 
                    positive_review_count = 13, 
                    neutral_review_count = 1, 
                    negative_review_count = 0, )
            )
        else:
            return RetailerInformationResponse(
                retailer_id = '1055479',
                display_name = 'RETAILER123',
                company_name = 'Fietsentuin',
                vat_number = 'NL123456789B01',
                kvk_number = '90005414',
                registration_date = '2015-06-17',
        )
        """

    def testRetailerInformationResponse(self):
        """Test RetailerInformationResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
